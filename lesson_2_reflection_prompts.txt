What happens when you initialize a repository? Why do you need to do it?

	A .git directory is created to hold metadata and all files in the directory are now tracked.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is for files that you are ready to commit to the repository, perhaps finished making any changes to them. It allows you to mark files you think are done while you may be changing others so you don't have to keep track of everything in your head.

How can you use the staging area to make sure you have one commit per logical
change?

	Do this by running 'git diff --staged' to view what changes you have already made and staged.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When you want to do experimental work and not affect the current master branch development. Also when you'd like to work on a different development line which runs parallel to the master. Branches help to separate but still keep organized the different endeavors.

How do the diagrams help you visualize the branch structure?

	They make it easy to see how they all relate to one another and let you draw lines backwards to see reachability.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	THe result is a combination of changes made witin each branch. It is represented in the diagram to show that the latest commit has 2 parents which can be referenced.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
